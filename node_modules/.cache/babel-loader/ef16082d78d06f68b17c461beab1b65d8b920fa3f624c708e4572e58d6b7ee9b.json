{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { NavLink } from \"react-router-dom\";\n// import Hamburger from \"./buttons/hamburger\";\n// export function Nav() {\n//     const [isOpen, setIsOpen] = useState(false);\n//     const toggleDropdown = () => {\n//         setIsOpen(!isOpen);\n//     };\n//     const closeDropdown = () => {\n//         setIsOpen(false);\n//     };\n//     return (\n//         <nav>\n//             <div className={`dropdown ${isOpen ? \"open\" : \"\"}`}>\n//                 <button className=\"dropdown-toggle btn-hamburger\" onClick={toggleDropdown}>\n//                     <Hamburger isOpen={isOpen} />\n//                 </button>\n//                 {isOpen && (\n//                     <ul className=\"dropdown-menu\">\n//                         <li>\n//                             <NavLink\n//                                 to=\"/\"\n//                                 end\n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Home\n//                             </NavLink>\n//                         </li>\n//                         {/* Uncomment if you want to include the contact link */}\n//                         {/* <li>\n//                             <NavLink \n//                                 to=\"/contact\" \n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Contact\n//                             </NavLink>\n//                         </li> */}\n//                         <li>\n//                             <NavLink\n//                                 to=\"/music\"\n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Music\n//                             </NavLink>\n//                         </li>\n//                         <li>\n//                             <NavLink\n//                                 to=\"/developer\"\n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Development\n//                             </NavLink>\n//                         </li>\n//                     </ul>\n//                 )}\n//             </div>\n//         </nav>\n//     );\n// }\nimport React,{useState}from\"react\";import{NavLink}from\"react-router-dom\";import Hamburger from\"./buttons/hamburger\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function Nav(){const[isOpen,setIsOpen]=useState(false);const toggleDropdown=()=>{setIsOpen(!isOpen);};const closeDropdown=()=>{setIsOpen(false);};return/*#__PURE__*/_jsx(\"nav\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown \".concat(isOpen?\"open\":\"\"),children:[/*#__PURE__*/_jsx(\"button\",{className:\"dropdown-toggle btn-hamburger color-bg\",onClick:toggleDropdown,children:/*#__PURE__*/_jsx(Hamburger,{isOpen:isOpen})}),isOpen&&/*#__PURE__*/_jsxs(\"ul\",{className:\"dropdown-menu\",children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{to:\"/\",end:true,className:_ref=>{let{isActive}=_ref;return isActive?'active':'';},onClick:closeDropdown,children:\"Home\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{to:\"/music\",className:_ref2=>{let{isActive}=_ref2;return isActive?'active':'';},onClick:closeDropdown,children:\"Music\"})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsx(NavLink,{to:\"/developer\",className:_ref3=>{let{isActive}=_ref3;return isActive?'active':'';},onClick:closeDropdown,children:\"Development\"})})]})]})});}","map":{"version":3,"names":["React","useState","NavLink","Hamburger","jsx","_jsx","jsxs","_jsxs","Nav","isOpen","setIsOpen","toggleDropdown","closeDropdown","children","className","concat","onClick","to","end","_ref","isActive","_ref2","_ref3"],"sources":["/Users/yngve/Library/Mobile Documents/com~apple~CloudDocs/Noroff (Skole)/GitHub/home-page-react/src/components/nav.tsx"],"sourcesContent":["\n// import React, { useState } from \"react\";\n// import { NavLink } from \"react-router-dom\";\n// import Hamburger from \"./buttons/hamburger\";\n\n// export function Nav() {\n//     const [isOpen, setIsOpen] = useState(false);\n\n//     const toggleDropdown = () => {\n//         setIsOpen(!isOpen);\n//     };\n\n//     const closeDropdown = () => {\n//         setIsOpen(false);\n//     };\n\n//     return (\n//         <nav>\n//             <div className={`dropdown ${isOpen ? \"open\" : \"\"}`}>\n//                 <button className=\"dropdown-toggle btn-hamburger\" onClick={toggleDropdown}>\n//                     <Hamburger isOpen={isOpen} />\n//                 </button>\n//                 {isOpen && (\n//                     <ul className=\"dropdown-menu\">\n//                         <li>\n//                             <NavLink\n//                                 to=\"/\"\n//                                 end\n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Home\n//                             </NavLink>\n//                         </li>\n//                         {/* Uncomment if you want to include the contact link */}\n//                         {/* <li>\n//                             <NavLink \n//                                 to=\"/contact\" \n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Contact\n//                             </NavLink>\n//                         </li> */}\n//                         <li>\n//                             <NavLink\n//                                 to=\"/music\"\n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Music\n//                             </NavLink>\n//                         </li>\n//                         <li>\n//                             <NavLink\n//                                 to=\"/developer\"\n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Development\n//                             </NavLink>\n//                         </li>\n//                     </ul>\n//                 )}\n//             </div>\n//         </nav>\n//     );\n// }\n\nimport React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Hamburger from \"./buttons/hamburger\";\n\nexport function Nav() {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggleDropdown = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const closeDropdown = () => {\n        setIsOpen(false);\n    };\n\n    return (\n        <nav>\n            <div className={`dropdown ${isOpen ? \"open\" : \"\"}`}>\n                <button className=\"dropdown-toggle btn-hamburger color-bg\" onClick={toggleDropdown}>\n                    <Hamburger isOpen={isOpen} />\n                </button>\n                {isOpen && (\n                    <ul className=\"dropdown-menu\">\n                        <li>\n                            <NavLink\n                                to=\"/\"\n                                end\n                                className={({ isActive }) => (isActive ? 'active' : '')}\n                                onClick={closeDropdown}\n                            >\n                                Home\n                            </NavLink>\n                        </li>\n                        {/* Uncomment if you want to include the contact link */}\n                        {/* <li>\n                            <NavLink \n                                to=\"/contact\" \n                                className={({ isActive }) => (isActive ? 'active' : '')}\n                                onClick={closeDropdown}\n                            >\n                                Contact\n                            </NavLink>\n                        </li> */}\n                        <li>\n                            <NavLink\n                                to=\"/music\"\n                                className={({ isActive }) => (isActive ? 'active' : '')}\n                                onClick={closeDropdown}\n                            >\n                                Music\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink\n                                to=\"/developer\"\n                                className={({ isActive }) => (isActive ? 'active' : '')}\n                                onClick={closeDropdown}\n                            >\n                                Development\n                            </NavLink>\n                        </li>\n                    </ul>\n                )}\n            </div>\n        </nav>\n    );\n}\n"],"mappings":"AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,OAAO,KAAQ,kBAAkB,CAC1C,MAAO,CAAAC,SAAS,KAAM,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5C,MAAO,SAAS,CAAAC,GAAGA,CAAA,CAAG,CAClB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGT,QAAQ,CAAC,KAAK,CAAC,CAE3C,KAAM,CAAAU,cAAc,CAAGA,CAAA,GAAM,CACzBD,SAAS,CAAC,CAACD,MAAM,CAAC,CACtB,CAAC,CAED,KAAM,CAAAG,aAAa,CAAGA,CAAA,GAAM,CACxBF,SAAS,CAAC,KAAK,CAAC,CACpB,CAAC,CAED,mBACIL,IAAA,QAAAQ,QAAA,cACIN,KAAA,QAAKO,SAAS,aAAAC,MAAA,CAAcN,MAAM,CAAG,MAAM,CAAG,EAAE,CAAG,CAAAI,QAAA,eAC/CR,IAAA,WAAQS,SAAS,CAAC,wCAAwC,CAACE,OAAO,CAAEL,cAAe,CAAAE,QAAA,cAC/ER,IAAA,CAACF,SAAS,EAACM,MAAM,CAAEA,MAAO,CAAE,CAAC,CACzB,CAAC,CACRA,MAAM,eACHF,KAAA,OAAIO,SAAS,CAAC,eAAe,CAAAD,QAAA,eACzBR,IAAA,OAAAQ,QAAA,cACIR,IAAA,CAACH,OAAO,EACJe,EAAE,CAAC,GAAG,CACNC,GAAG,MACHJ,SAAS,CAAEK,IAAA,MAAC,CAAEC,QAAS,CAAC,CAAAD,IAAA,OAAM,CAAAC,QAAQ,CAAG,QAAQ,CAAG,EAAE,EAAE,CACxDJ,OAAO,CAAEJ,aAAc,CAAAC,QAAA,CAC1B,MAED,CAAS,CAAC,CACV,CAAC,cAWLR,IAAA,OAAAQ,QAAA,cACIR,IAAA,CAACH,OAAO,EACJe,EAAE,CAAC,QAAQ,CACXH,SAAS,CAAEO,KAAA,MAAC,CAAED,QAAS,CAAC,CAAAC,KAAA,OAAM,CAAAD,QAAQ,CAAG,QAAQ,CAAG,EAAE,EAAE,CACxDJ,OAAO,CAAEJ,aAAc,CAAAC,QAAA,CAC1B,OAED,CAAS,CAAC,CACV,CAAC,cACLR,IAAA,OAAAQ,QAAA,cACIR,IAAA,CAACH,OAAO,EACJe,EAAE,CAAC,YAAY,CACfH,SAAS,CAAEQ,KAAA,MAAC,CAAEF,QAAS,CAAC,CAAAE,KAAA,OAAM,CAAAF,QAAQ,CAAG,QAAQ,CAAG,EAAE,EAAE,CACxDJ,OAAO,CAAEJ,aAAc,CAAAC,QAAA,CAC1B,aAED,CAAS,CAAC,CACV,CAAC,EACL,CACP,EACA,CAAC,CACL,CAAC,CAEd","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}