{"ast":null,"code":"var _jsxFileName = \"/Users/yngve/Library/Mobile Documents/com~apple~CloudDocs/Noroff (Skole)/GitHub/home-page-react/src/components/nav.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { NavLink } from \"react-router-dom\";\n// import Hamburger from \"./buttons/hamburger\";\n\n// export function Nav() {\n//     const [isOpen, setIsOpen] = useState(false);\n\n//     const toggleDropdown = () => {\n//         setIsOpen(!isOpen);\n//     };\n\n//     const closeDropdown = () => {\n//         setIsOpen(false);\n//     };\n\n//     return (\n//         <nav>\n//             <div className={`dropdown ${isOpen ? \"open\" : \"\"}`}>\n//                 <button className=\"dropdown-toggle btn-hamburger\" onClick={toggleDropdown}>\n//                     <Hamburger isOpen={isOpen} />\n//                 </button>\n//                 {isOpen && (\n//                     <ul className=\"dropdown-menu\">\n//                         <li>\n//                             <NavLink\n//                                 to=\"/\"\n//                                 end\n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Home\n//                             </NavLink>\n//                         </li>\n//                         {/* Uncomment if you want to include the contact link */}\n//                         {/* <li>\n//                             <NavLink \n//                                 to=\"/contact\" \n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Contact\n//                             </NavLink>\n//                         </li> */}\n//                         <li>\n//                             <NavLink\n//                                 to=\"/music\"\n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Music\n//                             </NavLink>\n//                         </li>\n//                         <li>\n//                             <NavLink\n//                                 to=\"/developer\"\n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Development\n//                             </NavLink>\n//                         </li>\n//                     </ul>\n//                 )}\n//             </div>\n//         </nav>\n//     );\n// }\n\nimport React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Hamburger from \"./buttons/hamburger\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Nav() {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleDropdown = () => {\n    setIsOpen(!isOpen);\n  };\n  const closeDropdown = () => {\n    setIsOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dropdown ${isOpen ? \"open\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dropdown-toggle btn-hamburger color-bg\",\n        onClick: toggleDropdown,\n        children: /*#__PURE__*/_jsxDEV(Hamburger, {\n          isOpen: isOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), isOpen && /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"dropdown-menu\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/\",\n            end: true,\n            className: ({\n              isActive\n            }) => isActive ? 'active' : '',\n            onClick: closeDropdown,\n            children: \"Home\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/music\",\n            className: ({\n              isActive\n            }) => isActive ? 'active' : '',\n            onClick: closeDropdown,\n            children: \"Music\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(NavLink, {\n            to: \"/developer\",\n            className: ({\n              isActive\n            }) => isActive ? 'active' : '',\n            onClick: closeDropdown,\n            children: \"Development\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(Nav, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = Nav;\nvar _c;\n$RefreshReg$(_c, \"Nav\");","map":{"version":3,"names":["React","useState","NavLink","Hamburger","jsxDEV","_jsxDEV","Nav","_s","isOpen","setIsOpen","toggleDropdown","closeDropdown","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","to","end","isActive","_c","$RefreshReg$"],"sources":["/Users/yngve/Library/Mobile Documents/com~apple~CloudDocs/Noroff (Skole)/GitHub/home-page-react/src/components/nav.tsx"],"sourcesContent":["\n// import React, { useState } from \"react\";\n// import { NavLink } from \"react-router-dom\";\n// import Hamburger from \"./buttons/hamburger\";\n\n// export function Nav() {\n//     const [isOpen, setIsOpen] = useState(false);\n\n//     const toggleDropdown = () => {\n//         setIsOpen(!isOpen);\n//     };\n\n//     const closeDropdown = () => {\n//         setIsOpen(false);\n//     };\n\n//     return (\n//         <nav>\n//             <div className={`dropdown ${isOpen ? \"open\" : \"\"}`}>\n//                 <button className=\"dropdown-toggle btn-hamburger\" onClick={toggleDropdown}>\n//                     <Hamburger isOpen={isOpen} />\n//                 </button>\n//                 {isOpen && (\n//                     <ul className=\"dropdown-menu\">\n//                         <li>\n//                             <NavLink\n//                                 to=\"/\"\n//                                 end\n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Home\n//                             </NavLink>\n//                         </li>\n//                         {/* Uncomment if you want to include the contact link */}\n//                         {/* <li>\n//                             <NavLink \n//                                 to=\"/contact\" \n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Contact\n//                             </NavLink>\n//                         </li> */}\n//                         <li>\n//                             <NavLink\n//                                 to=\"/music\"\n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Music\n//                             </NavLink>\n//                         </li>\n//                         <li>\n//                             <NavLink\n//                                 to=\"/developer\"\n//                                 className={({ isActive }) => (isActive ? 'active' : '')}\n//                                 onClick={closeDropdown}\n//                             >\n//                                 Development\n//                             </NavLink>\n//                         </li>\n//                     </ul>\n//                 )}\n//             </div>\n//         </nav>\n//     );\n// }\n\nimport React, { useState } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport Hamburger from \"./buttons/hamburger\";\n\nexport function Nav() {\n    const [isOpen, setIsOpen] = useState(false);\n\n    const toggleDropdown = () => {\n        setIsOpen(!isOpen);\n    };\n\n    const closeDropdown = () => {\n        setIsOpen(false);\n    };\n\n    return (\n        <nav>\n            <div className={`dropdown ${isOpen ? \"open\" : \"\"}`}>\n                <button className=\"dropdown-toggle btn-hamburger color-bg\" onClick={toggleDropdown}>\n                    <Hamburger isOpen={isOpen} />\n                </button>\n                {isOpen && (\n                    <ul className=\"dropdown-menu\">\n                        <li>\n                            <NavLink\n                                to=\"/\"\n                                end\n                                className={({ isActive }) => (isActive ? 'active' : '')}\n                                onClick={closeDropdown}\n                            >\n                                Home\n                            </NavLink>\n                        </li>\n                        {/* Uncomment if you want to include the contact link */}\n                        {/* <li>\n                            <NavLink \n                                to=\"/contact\" \n                                className={({ isActive }) => (isActive ? 'active' : '')}\n                                onClick={closeDropdown}\n                            >\n                                Contact\n                            </NavLink>\n                        </li> */}\n                        <li>\n                            <NavLink\n                                to=\"/music\"\n                                className={({ isActive }) => (isActive ? 'active' : '')}\n                                onClick={closeDropdown}\n                            >\n                                Music\n                            </NavLink>\n                        </li>\n                        <li>\n                            <NavLink\n                                to=\"/developer\"\n                                className={({ isActive }) => (isActive ? 'active' : '')}\n                                onClick={closeDropdown}\n                            >\n                                Development\n                            </NavLink>\n                        </li>\n                    </ul>\n                )}\n            </div>\n        </nav>\n    );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}