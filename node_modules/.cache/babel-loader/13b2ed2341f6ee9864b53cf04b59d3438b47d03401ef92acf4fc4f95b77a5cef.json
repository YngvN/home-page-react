{"ast":null,"code":"var _jsxFileName = \"/Users/yngve/Library/Mobile Documents/com~apple~CloudDocs/Noroff (Skole)/GitHub/home-page-react/src/utility/actions/renders/musicPosts.tsx\";\n// import React from 'react';\n// import { Post } from '../types';\n\n// interface MusicPostsProps {\n//     posts: Post[];\n// }\n\n// const MusicPosts: React.FC<MusicPostsProps> = ({ posts }) => {\n//     // Function to filter out paragraphs containing 'Music' and remove all class attributes\n//     const filterContent = (content: string) => {\n//         const parser = new DOMParser();\n//         const doc = parser.parseFromString(content, 'text/html');\n//         const paragraphs = doc.querySelectorAll('p');\n\n//         paragraphs.forEach((p) => {\n//             if (/Music/i.test(p.textContent || '')) {\n//                 p.remove();\n//             }\n//         });\n\n//         // Remove all class attributes\n//         const allElements = doc.querySelectorAll('*');\n//         allElements.forEach((element) => {\n//             element.removeAttribute('class');\n//         });\n\n//         return doc.body.innerHTML;\n//     };\n\n//     return (\n//         <div className=\"music-posts column\">\n//             {posts.map((post) => {\n//                 const filteredContent = filterContent(post.content.rendered);\n//                 return (\n//                     <div key={post.id} className=\"project-container\">\n\n//                         <div className=\"project-description project-child column\">\n//                             <h2 className=\"project-title\">{post.title.rendered}</h2>\n//                             <div className=\"project-content\" dangerouslySetInnerHTML={{ __html: filteredContent }} />\n//                         </div>\n//                         <div className=\"project-image-container  project-child\">\n//                             {post.featured_image && (\n//                                 <img\n//                                     src={post.featured_image}\n//                                     alt={post.title.rendered}\n//                                     className=\"project-image\"\n//                                 />\n//                             )}\n//                         </div>\n//                     </div>\n\n//                 );\n//             })}\n//         </div>\n//     );\n// };\n\n// export default MusicPosts;\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicPosts = ({\n  posts\n}) => {\n  // Function to filter out paragraphs containing 'Music' and remove all class attributes\n  const filterContent = content => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(content, 'text/html');\n    const paragraphs = doc.querySelectorAll('p');\n    paragraphs.forEach(p => {\n      if (/Music/i.test(p.textContent || '')) {\n        p.remove();\n      }\n    });\n\n    // Remove all class attributes\n    const allElements = doc.querySelectorAll('*');\n    allElements.forEach(element => {\n      element.removeAttribute('class');\n    });\n\n    // Collect <figure> and <iframe> elements and remove them from their original positions\n    const figuresAndIframes = doc.querySelectorAll('figure');\n    const externalElements = [];\n    figuresAndIframes.forEach(element => {\n      externalElements.push(element.outerHTML);\n      element.remove();\n    });\n    return {\n      filteredHtml: doc.body.innerHTML,\n      externalElements\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"music-posts column\",\n    children: posts.map(post => {\n      const {\n        filteredHtml,\n        externalElements\n      } = filterContent(post.content.rendered);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-container container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-description project-child column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"project-title\",\n            children: post.title.rendered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-content column\",\n            dangerouslySetInnerHTML: {\n              __html: filteredHtml\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-external-content\",\n          children: externalElements.map((elementHtml, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-child\",\n            dangerouslySetInnerHTML: {\n              __html: elementHtml\n            }\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_c = MusicPosts;\nexport default MusicPosts;\nvar _c;\n$RefreshReg$(_c, \"MusicPosts\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MusicPosts","posts","filterContent","content","parser","DOMParser","doc","parseFromString","paragraphs","querySelectorAll","forEach","p","test","textContent","remove","allElements","element","removeAttribute","figuresAndIframes","externalElements","push","outerHTML","filteredHtml","body","innerHTML","className","children","map","post","rendered","title","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","elementHtml","index","id","_c","$RefreshReg$"],"sources":["/Users/yngve/Library/Mobile Documents/com~apple~CloudDocs/Noroff (Skole)/GitHub/home-page-react/src/utility/actions/renders/musicPosts.tsx"],"sourcesContent":["// import React from 'react';\n// import { Post } from '../types';\n\n// interface MusicPostsProps {\n//     posts: Post[];\n// }\n\n// const MusicPosts: React.FC<MusicPostsProps> = ({ posts }) => {\n//     // Function to filter out paragraphs containing 'Music' and remove all class attributes\n//     const filterContent = (content: string) => {\n//         const parser = new DOMParser();\n//         const doc = parser.parseFromString(content, 'text/html');\n//         const paragraphs = doc.querySelectorAll('p');\n\n//         paragraphs.forEach((p) => {\n//             if (/Music/i.test(p.textContent || '')) {\n//                 p.remove();\n//             }\n//         });\n\n//         // Remove all class attributes\n//         const allElements = doc.querySelectorAll('*');\n//         allElements.forEach((element) => {\n//             element.removeAttribute('class');\n//         });\n\n//         return doc.body.innerHTML;\n//     };\n\n//     return (\n//         <div className=\"music-posts column\">\n//             {posts.map((post) => {\n//                 const filteredContent = filterContent(post.content.rendered);\n//                 return (\n//                     <div key={post.id} className=\"project-container\">\n\n//                         <div className=\"project-description project-child column\">\n//                             <h2 className=\"project-title\">{post.title.rendered}</h2>\n//                             <div className=\"project-content\" dangerouslySetInnerHTML={{ __html: filteredContent }} />\n//                         </div>\n//                         <div className=\"project-image-container  project-child\">\n//                             {post.featured_image && (\n//                                 <img\n//                                     src={post.featured_image}\n//                                     alt={post.title.rendered}\n//                                     className=\"project-image\"\n//                                 />\n//                             )}\n//                         </div>\n//                     </div>\n\n//                 );\n//             })}\n//         </div>\n//     );\n// };\n\n// export default MusicPosts;\n\nimport React from 'react';\nimport { Post } from '../types';\n\ninterface MusicPostsProps {\n    posts: Post[];\n}\n\nconst MusicPosts: React.FC<MusicPostsProps> = ({ posts }) => {\n    // Function to filter out paragraphs containing 'Music' and remove all class attributes\n    const filterContent = (content: string) => {\n        const parser = new DOMParser();\n        const doc = parser.parseFromString(content, 'text/html');\n        const paragraphs = doc.querySelectorAll('p');\n\n        paragraphs.forEach((p) => {\n            if (/Music/i.test(p.textContent || '')) {\n                p.remove();\n            }\n        });\n\n        // Remove all class attributes\n        const allElements = doc.querySelectorAll('*');\n        allElements.forEach((element) => {\n            element.removeAttribute('class');\n        });\n\n        // Collect <figure> and <iframe> elements and remove them from their original positions\n        const figuresAndIframes = doc.querySelectorAll('figure');\n        const externalElements: string[] = [];\n        figuresAndIframes.forEach((element) => {\n            externalElements.push((element as HTMLElement).outerHTML);\n            element.remove();\n        });\n\n        return { filteredHtml: doc.body.innerHTML, externalElements };\n    };\n\n    return (\n        <div className=\"music-posts column\">\n            {posts.map((post) => {\n                const { filteredHtml, externalElements } = filterContent(post.content.rendered);\n                return (\n                    <div key={post.id} className=\"project-container container\">\n                        <div className=\"project-description project-child column\">\n                            <h2 className=\"project-title\">{post.title.rendered}</h2>\n                            <div className=\"project-content column\" dangerouslySetInnerHTML={{ __html: filteredHtml }} />\n                        </div>\n                        <div className=\"project-external-content\">\n                            {externalElements.map((elementHtml, index) => (\n                                <div key={index} className=\"project-child\" dangerouslySetInnerHTML={{ __html: elementHtml }} />\n                            ))}\n                        </div>\n                    </div>\n                );\n            })}\n        </div>\n    );\n};\n\nexport default MusicPosts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}